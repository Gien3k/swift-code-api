# docker-compose.yml

services:
  # Database Service (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: swift_db_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Persist database data
    environment:
      # Read DB credentials from .env file
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      # Map host port 5433 -> container port 5432
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - swiftnet

  # Application Service (FastAPI)
  app:
    container_name: swift_api_app
    build: . # Build from Dockerfile in current directory
    ports:
      # Map host port 8080 -> container port 8080
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy # Wait for db to be ready
    environment:
      DATABASE_URL: ${DATABASE_URL}
      # Default path if not set in .env (path inside container)
      EXCEL_FILE_PATH: ${EXCEL_FILE_PATH:-/app/data/swift_codes.xlsx}
      PYTHONPATH: /app # Ensure imports work from /app
    # volumes: # Optional: Uncomment to mount local code for development
      # - ./swift_api:/app/swift_api
      # - ./tests:/app/tests
      # Note: Data file is copied via Dockerfile now, mounting ./data is removed.
    networks:
      - swiftnet

# Top-level volume definition for data persistence
volumes:
  postgres_data:

# Top-level network definition for inter-service communication
networks:
  swiftnet:
    driver: bridge
